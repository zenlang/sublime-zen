<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>zen</string>
	</array>
	<key>name</key>
	<string>Zen</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#main</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>block</key>
		<dict>
			<key>begin</key>
			<string>([a-zA-Z_][a-zA-Z0-9_.]*|@\".+\")?\s*(\{)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.zen</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.braces.begin.zen</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>meta.block.zen</string>
			<key>end</key>
			<string>(\})</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.braces.end.zen</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#main</string>
				</dict>
			</array>
		</dict>
		<key>character_escapes</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\n</string>
					<key>name</key>
					<string>constant.character.escape.newline.zen</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\r</string>
					<key>name</key>
					<string>constant.character.escape.carrigereturn.zen</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\t</string>
					<key>name</key>
					<string>constant.character.escape.tabulator.zen</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\\\</string>
					<key>name</key>
					<string>constant.character.escape.backslash.zen</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\'</string>
					<key>name</key>
					<string>constant.character.escape.single-quote.zen</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\\"</string>
					<key>name</key>
					<string>constant.character.escape.double-quote.zen</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\x[a-fA-F0-9]{2}</string>
					<key>name</key>
					<string>constant.character.escape.hexidecimal.zen</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\u\{[a-fA-F0-9]{1,6}\}</string>
					<key>name</key>
					<string>constant.character.escape.hexidecimal.zen</string>
				</dict>
			</array>
		</dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>TODO</string>
					<key>name</key>
					<string>comment.line.todo.zen</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>//[^/]</string>
					<key>end</key>
					<string>$\n?</string>
					<key>name</key>
					<string>comment.line.zen</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#todo</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>///</string>
					<key>end</key>
					<string>$\n?</string>
					<key>name</key>
					<string>comment.line.documentation.zen</string>
				</dict>
			</array>
		</dict>
		<key>constants</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(null|undefined|true|false)\b</string>
					<key>name</key>
					<string>constant.language.zen</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(?&lt;!\.)(-?[0-9]+)(?!\.)\b</string>
					<key>name</key>
					<string>constant.numeric.integer.zen</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(?&lt;!\.)(0x[a-fA-F0-9]+)(?!\.)\b</string>
					<key>name</key>
					<string>constant.numeric.integer.hexadecimal.zen</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(?&lt;!\.)(0o[0-7]+)(?!\.)\b</string>
					<key>name</key>
					<string>constant.numeric.integer.octal.zen</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(?&lt;!\.)(0b[01]+)(?!\.)\b</string>
					<key>name</key>
					<string>constant.numeric.integer.binary.zen</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)(-?\b[0-9]+(?:\.[0-9]+)?(?:[eE][+-]?[0-9]+)?)(?!\.)\b</string>
					<key>name</key>
					<string>constant.numeric.float.zen</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)(-?\b0x[a-fA-F0-9]+(?:\.[a-fA-F0-9]+)?[pP]?(?:[+-]?[0-9]+)?)(?!\.)\b</string>
					<key>name</key>
					<string>constant.numeric.float.hexadecimal.zen</string>
				</dict>
			</array>
		</dict>
		<key>container_decl</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?:([a-zA-Z_]\w*|@\".+\")\s*=\s*)?\b(packed|extern)?\b\s*(union\b)(?:(\()([a-zA-Z_][a-zA-Z0-9_.]*|@\".+\")(\)))?\s*({)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.union.zen</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.zen</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.type.union.zen</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.parens.begin.zen</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>storage.type.zen</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.parens.end.zen</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.braces.begin.zen</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.union</string>
					<key>end</key>
					<string>(})</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.braces.end.zen</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#main</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?:([a-zA-Z_]\w*|@\".+\")\s*=\s*)?\b(packed|extern)?\b\s*(struct)\s*({)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.struct.zen</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.zen</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.type.struct.zen</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.braces.begin.zen</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.struct.zen</string>
					<key>end</key>
					<string>(})</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.braces.end.zen</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#main</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?:([a-zA-Z_]\w*|@\".+\")\s*=\s*)?\s*(interface)\s*({)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.interface.zen</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.zen</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.braces.begin.zen</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.interface.zen</string>
					<key>end</key>
					<string>(})</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.braces.end.zen</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#main</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?:([a-zA-Z_]\w*|@\".+\")\s*=\s*)?\b(extern)?\b\s*(enum\b)(?:(\()([a-zA-Z_][a-zA-Z0-9_.]*|@\".+\")(\)))?\s*({)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.enum.zen</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.zen</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.type.enum.zen</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.parens.begin.zen</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>storage.type.zen</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.parens.end.zen</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.braces.begin.zen</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.enum.zen</string>
					<key>end</key>
					<string>(})</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.braces.end.zen</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#main</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?:([a-zA-Z_]\w*|@\".+\")\s*=\s*)?\b(error)\b\s*({)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.error.zen</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.error.zen</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.braces.begin.zen</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.error.zen</string>
					<key>end</key>
					<string>(})</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.braces.end.zen</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#main</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.error.zen</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.accessor.zen</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>entity.name.error.zen</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(error)(\.)([a-zA-Z_]\w*|@\".+\")</string>
				</dict>
			</array>
		</dict>
		<key>field_decl</key>
		<dict>
			<key>begin</key>
			<string>([a-zA-Z_]\w*|@\".+\")\s*(:)\s*</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>variable.other.member.zen</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.terminator.zen</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>storage.type.zen</string>
			<key>end</key>
			<string>(?:(,)|(?:\n|\r))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.zen</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#main</string>
				</dict>
			</array>
		</dict>
		<key>func_call</key>
		<dict>
			<key>begin</key>
			<string>([a-zA-Z_]\w*|@\".+\")(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>variable.function.zen</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.parens.begin.zen</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>meta.function-call.zen</string>
			<key>end</key>
			<string>(\))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.parens.end.zen</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#main</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.zen</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.parens.end.zen</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?:(,)|(?:\)))</string>
				</dict>
			</array>
		</dict>
		<key>keywords</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(while|for|break|return|continue|asm|defer|errdefer|unreachable)\b</string>
					<key>name</key>
					<string>keyword.control.zen</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(async|await|suspend|resume|cancel)\b</string>
					<key>name</key>
					<string>keyword.control.async.zen</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(if|else|switch|try|catch|orelse)\b</string>
					<key>name</key>
					<string>keyword.control.conditional.zen</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\w)(@import|@cImport|@cInclude)\b</string>
					<key>name</key>
					<string>keyword.control.import.zen</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\busingnamespace\b</string>
					<key>name</key>
					<string>keyword.other.usingnamespace.zen</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\btest\b</string>
					<key>name</key>
					<string>keyword.other.test.zen</string>
				</dict>
			</array>
		</dict>
		<key>label</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?&lt;!\w):([a-zA-Z_]\w*|@\".+\")</string>
					<key>name</key>
					<string>entity.name.label.zen</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>([a-zA-Z_]\w*|@\".+\"):\s*(?:({)|(while|for))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.label.zen</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.braces.begin.zen</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.control.zen</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(})</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.braces.end.zen</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#main</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>main</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\b(fn)(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.zen</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.parens.begin.zen</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.parameters.zen</string>
					<key>end</key>
					<string>(\))\s*([a-zA-Z_][a-zA-Z0-9_.]*|@\".+\")?</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.parens.end.zen</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.zen</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>storage.type.zen</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>punctuation.separator.zen</string>
								</dict>
							</dict>
							<key>match</key>
							<string>([a-zA-Z_][a-zA-Z0-9_.]*|@\".+\")(,)?</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(fn)\s+([a-zA-Z_][a-zA-Z0-9_.]*|@\".+\")(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.zen</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.zen</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.parens.begin.zen</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.function.parameters.zen</string>
					<key>end</key>
					<string>(?&lt;=\))\s*([a-zA-Z_][a-zA-Z0-9_.]*|@\".+\")?</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.zen</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#param_list</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.zen</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>variable.other.zen</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.zen</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>storage.type.zen</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.assignment.zen</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(const|var)\s+([a-zA-Z_][a-zA-Z0-9_.]*|@\".+\")\s*(:)\s*([a-zA-Z_][a-zA-Z0-9_.]*|@\".+\")\s*(=)</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#func_call</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#label</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#punctuation</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#storage_modifier</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#container_decl</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constants</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#strings</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#storage</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#keywords</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#operators</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#support</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#field_decl</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#block</string>
				</dict>
			</array>
		</dict>
		<key>operators</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b!\b</string>
					<key>name</key>
					<string>keyword.operator.zen</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(==|(?:!|&gt;|&lt;)=?)</string>
					<key>name</key>
					<string>keyword.operator.logical.zen</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(and|or)\b</string>
					<key>name</key>
					<string>keyword.operator.word.zen</string>
				</dict>
				<dict>
					<key>match</key>
					<string>((?:(?:\+|-|\*)\%?|/|%|&lt;&lt;|&gt;&gt;|&amp;|\|(?=[^\|])|\^)?=)</string>
					<key>name</key>
					<string>keyword.operator.assignment.zen</string>
				</dict>
				<dict>
					<key>match</key>
					<string>((?:\+|-|(?&lt;=\w)\s*\*)\%?|/(?!/)|%)</string>
					<key>name</key>
					<string>keyword.operator.arithmetic.zen</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(&lt;&lt;|&gt;&gt;|&amp;(?=\W)|\|(?=[^\|])|\^|~)</string>
					<key>name</key>
					<string>keyword.operator.bitwise.zen</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\+\+|\*\*|-&gt;|\.\?|\.\*|&amp;(?=\w)|\?|\|\||\.\.|\.\.\.)</string>
					<key>name</key>
					<string>keyword.operator.other.zen</string>
				</dict>
			</array>
		</dict>
		<key>param_list</key>
		<dict>
			<key>begin</key>
			<string>(comptime|noalias)?\s*([a-zA-Z_][a-zA-Z0-9_.]*|@\".+\")\s*(:)\s*</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.zen</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.zen</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.terminator.zen</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>storage.type.zen</string>
			<key>end</key>
			<string>(?:(,)|(?:\)))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.zen</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.parens.end.zen</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#main</string>
				</dict>
			</array>
		</dict>
		<key>punctuation</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>,</string>
					<key>name</key>
					<string>punctuation.separator.zen</string>
				</dict>
				<dict>
					<key>match</key>
					<string>;</string>
					<key>name</key>
					<string>punctuation.terminator.zen</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.parens.begin.zen</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.group.zen</string>
					<key>end</key>
					<string>(\))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.parens.end.zen</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#main</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>storage</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(bool|void|noreturn|type|anyerror|promise)\b</string>
					<key>name</key>
					<string>storage.type.zen</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(?&lt;!\.)([iu][0-9]\d*|[iu]size|comptime_int)\b</string>
					<key>name</key>
					<string>storage.type.integer.zen</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(f16|f32|f64|f128|comptime_float)\b</string>
					<key>name</key>
					<string>storage.type.float.zen</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(c_short|c_ushort|c_int|c_uint|c_long|c_ulong|c_longlong|c_ulonglong|c_longdouble|c_void)\b</string>
					<key>name</key>
					<string>storage.type.c_compat.zen</string>
				</dict>
			</array>
		</dict>
		<key>storage_modifier</key>
		<dict>
			<key>match</key>
			<string>\b(const|var|extern|packed|export|pub|noalias|inline|comptime|nakedcc|stdcallcc|volatile|align|linksection|threadlocal|allowzero|vtable)\b</string>
			<key>name</key>
			<string>storage.modifier.zen</string>
		</dict>
		<key>strings</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\'</string>
					<key>end</key>
					<string>\'</string>
					<key>name</key>
					<string>string.quoted.single.zen</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#character_escapes</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\\[^\'][^\']*?</string>
							<key>name</key>
							<string>invalid.illegal.character.zen</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>c?\"</string>
					<key>end</key>
					<string>\"</string>
					<key>name</key>
					<string>string.quoted.double.zen</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#character_escapes</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\\[^\'][^\']*?</string>
							<key>name</key>
							<string>invalid.illegal.character.zen</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>c?\\\\</string>
					<key>end</key>
					<string>$\n?</string>
					<key>name</key>
					<string>string.quoted.other.zen</string>
				</dict>
			</array>
		</dict>
		<key>support</key>
		<dict>
			<key>match</key>
			<string>(?&lt;!\w)@[^\"\d][a-zA-Z_]\w*\b</string>
			<key>name</key>
			<string>support.function.zen</string>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.zen</string>
</dict>
</plist>
